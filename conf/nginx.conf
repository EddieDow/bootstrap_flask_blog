user nobody;
worker_processes 3;
error_log logs/error.log info;

events {
    use epoll;
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # use limit module
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # set request cache
    server_names_hash_bucket_size 128;
    client_header_buffer_size 512k;
    large_client_header_buffers 4 512k;
    client_max_body_size 100m;

    sendfile on;

    gzip on;

    log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" $http_x_forwarded_for';

    upstream backend_server {
        server web:5000 weight=1;
    }

    # variables
    set $domain_name = "";

    # redirect 80 to 443
    server {
        listen 80;
        server_name www.$domain_name;
        return 404; # managed by Certbot

        if ($host = www.$domain_name) {
            return 301 https://$host$request_uri;
        } # managed by Certbot
    }

    # main site
    server {
        access_log     logs/host.access.log  main;

        # revert proxy
        location / {
            proxy_pass          http://backend_server;
            proxy_redirect      off;
            proxy_set_header    Host               $host;
            proxy_set_header    X-Real-IP          $remote_addr;
            proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
        }

        location ~ /.git/ {
            deny all;
        }

        location ^~ /static/ {
            root    /usr/src/app/bootstrap_flask_blog;
        }

        location ^~ /api/ {
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin '*';
                add_header Access-Control-Allow-Methods 'GET,POST,PUT,OPTIONS';
                add_header Access-Control-Allow-Headers 'Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Request-Headers,X-Requested-With,Content-Type,Access-Control-Allow-Headers,Accept';
                return 204;
            }
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET,POST,PUT,OPTIONS';
            add_header Access-Control-Allow-Headers 'Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Request-Headers,X-Requested-With,Content-Type,Access-Control-Allow-Headers,Accept';
        }

        location~ .*\.(js|css)?$ {
            expires      30d;
        }

        listen 443 ssl http2; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/www.$domain_name/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/www.$domain_name/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }

    # blog site
    server {
        listen  80;
        server_name blog.$domain_name;
        location / {
            root /usr/src/app/vue_blog;
            index index.html;
        }
    }
}
